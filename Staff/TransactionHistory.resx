<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtPhoneNumber.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        rwAAAK8BK7AVuQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAIsSURBVEhLpZXJ
        605RGICvmWQoQwhlKCF2ZF6wQFLWRKxYimQnQ8YdhVKyEUUUQvkDSNmYS4rMU0mx9zzn/K7vfue7371X
        31NPv/e9v+8O5z3nvCcrMBrP4xd8jOuwGy/xEz7AgzgfK5mKz/EkjsJF+BmXYBkDcBIux2P4Dq/hDOxg
        GD7FXSFrsRa9cXzIqhmKe9DRr/FCkd14JYYdOPy72C9k9SxGS7c6ZH08wmUx7MBSPMO0VM7BB7yM6b2+
        xJFMDxn8xuExLMURpBPuiyfjdnyDp3Eg5uzFqzHMsj/Y7QXW03kYGbJyRuA99CU5zon3zTN5jbMMElbi
        V3TIdfgBb3FpyCLH8YDBJdxqkGAdN8SwETvQZ+WswPsGm/GmQcJZdF80xb3kxOe4Tz4aWMMf6A+KTMNf
        +G811ODEv4hhoC0/gcVJytmPt7F/yHpgLNoaFoSsxSB8iEdD1iOb8AkODlmLKeiS2xayHnFTHY5hG3Pw
        PR7CsnLZid2MtUt6Irqet4SsHReBbeUGTvBCHz7Ul99BO7J/x2FX5uI3XBWydoag8+H/9+F6dDPmHdR2
        4SgtabdWH3AXf8eyl8hMPIc+3N+m2OpdNFWHVrjRLy0rVxPsssV9UYrlck6OYLq66hiDP2NYjRPvxLmE
        F3qhIafwQgybsRGt6xlM20qKp6QryuX7XzhsD3l71y10881GzxO1g15HR1v3EZX4MHf+RXyFHlqejLaV
        neiBA1n2F2PNZiGYe1BxAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnFilterByPhoneNumber.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAZ9JREFUWEft1q1LQ1EYx/ErLGiwGC1mk/4HFmFgUQYiggPBtCAyixrU4IJFDAYd
        ImoVh0HwBZWBGDS5omgQDBZRDIIvRa7f5/LA8Ny7MS73DJX7g094eA7nOWz3bsf59XFdtxE5HGIXI9qq
        Txg4gycsYBlf6NK2/TBsG6taSn2DMS2jCRsmMV/BLfK6VNZeI4tpBK2vVVK39DaVDY8qeETQAeSTCVpf
        q6xuWT0sLMB3AC3th2FLuMIAhvGOfm3bD8NaUcQL5G1YR0LbceL4wvPRhwvc4Rid2rIfhjXjAxuYgByg
        pG37YVg7JG1ap/DmNauFRWlsReAAkh8HQDfMtWlvuEQKoxlWuANEFTYN9xVEFYbJQyg/1ZuQh/AEl9qu
        TxjYi3PIayj/eh3aivPHwnfXgn3I3/Az5AbUpG37Ydgs7jGIIchdIKNt+2FYHgUtpT5FTstow8aTMC+N
        D/AdAGsw14ZRvldS9MC8NpcQdIBxmGvDKF/Lg8KCFexoKfUZ5rS0H4Zl8IpFyM34Eylt2w/DEpiCvIp7
        GEWDtv9LHOcbhgu3ip8bXJMAAAAASUVORK5CYII=
</value>
  </data>
</root>